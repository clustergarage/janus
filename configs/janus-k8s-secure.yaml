apiVersion: v1
kind: Namespace
metadata:
  name: janus
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: janus-admin
  namespace: janus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: janus-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: janus-admin
  namespace: janus
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: janusguards.januscontroller.clustergarage.io
spec:
  group: januscontroller.clustergarage.io
  version: v1alpha1
  scope: Namespaced
  names:
    kind: JanusGuard
    singular: janusguard
    plural: janusguards
    shortNames:
    - jg
    categories:
    - all
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Observable
    type: integer
    description: Number of pods that can be guarded
    JSONPath: .status.observablePods
  - name: Guarded
    type: integer
    description: Number of pods currently being guarded
    JSONPath: .status.guardedPods
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: januscontroller
  namespace: janus
  labels:
    controller: januscontroller
spec:
  replicas: 1
  selector:
    matchLabels:
      controller: januscontroller
  template:
    metadata:
      labels:
        controller: januscontroller
    spec:
      containers:
      - name: januscontroller
        image: clustergarage/janus-controller:v0.1.0
        command: [
          "/januscontroller",
          "-tls-ca-file", "/usr/lib/ssl/certs/ca.pem",
          "-tls-cert-file", "/usr/lib/ssl/certs/cert.pem",
          "-tls-key-file", "/usr/lib/ssl/certs/key.pem",
          "-tls-server-name", "localhost"
        ]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":5000"]
          initialDelaySeconds: 10
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":5000"]
          initialDelaySeconds: 5
        volumeMounts:
        - name: janus-config-volume
          mountPath: /usr/lib/ssl/certs
          readOnly: true
      serviceAccountName: janus-admin
      volumes:
      - name: janus-config-volume
        configMap:
          name: janus-config
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: janusd
  namespace: janus
  labels:
    daemon: janusd
spec:
  selector:
    matchLabels:
      daemon: janusd
  template:
    metadata:
      labels:
        daemon: janusd
    spec:
      containers:
      - name: janusd
        image: clustergarage/janusd:v0.1.0
        command: [
          "/janusd",
          "-tlscafile", "/usr/lib/ssl/certs/ca.pem",
          "-tlscertfile", "/usr/lib/ssl/certs/cert.pem",
          "-tlskeyfile", "/usr/lib/ssl/certs/key.pem"
        ]
        ports:
        - name: grpc
          containerPort: 50051
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":50051"]
          initialDelaySeconds: 10
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":50051"]
          initialDelaySeconds: 5
        volumeMounts:
        - name: janus-config-volume
          mountPath: /usr/lib/ssl/certs
          readOnly: true
        - name: sysfscgroup
          mountPath: /sys/fs/cgroup
        securityContext:
          capabilities:
            add:
            - AUDIT_WRITE
            - SYS_ADMIN
            - SYS_PTRACE
      hostPID: true
      serviceAccountName: janus-admin
      volumes:
      - name: janus-config-volume
        configMap:
          name: janus-config
      - name: sysfscgroup
        hostPath:
          path: /sys/fs/cgroup
---
apiVersion: v1
kind: Service
metadata:
  name: janusd-svc
  namespace: janus
  labels:
    daemon: janusd
spec:
  selector:
    daemon: janusd
  clusterIP: None
  ports:
  - name: grpc
    port: 50051
    targetPort: grpc
