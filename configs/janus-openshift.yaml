---
apiVersion: project.openshift.io/v1
kind: Project
metadata:
  annotations:
    openshift.io/display-name: "Janus"
    openshift.io/description: "Filesystem permission gatekeeper for Kubernetes"
  name: janus
spec:
  finalizers:
  - openshift.io/origin
  - kubernetes
---
apiVersion: v1
kind: RoleBinding
metadata:
  name: admins
  namespace: janus
roleRef:
  name: admin
subjects:
- kind: User
  name: janus-admin
userNames:
- janus-admin
---
apiVersion: v1
kind: RoleBinding
metadata:
  name: system:image-pullers
  namespace: janus
groupNames:
- system:serviceaccounts:janus
roleRef:
  name: system:image-puller
subjects:
- kind: SystemGroup
  name: system:serviceaccounts:janus
---
apiVersion: v1
kind: RoleBinding
metadata:
  name: system:image-builders
  namespace: janus
roleRef:
  name: system:image-builder
subjects:
- kind: ServiceAccount
  name: builder
userNames:
- system:serviceaccount:janus:builder
---
apiVersion: v1
kind: RoleBinding
metadata:
  name: system:deployers
  namespace: janus
roleRef:
  name: system:deployer
subjects:
- kind: ServiceAccount
  name: deployer
userNames:
- system:serviceaccount:janus:deployer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: janus-admin
  namespace: janus
---
apiVersion: authorization.openshift.io/v1
kind: ClusterRoleBinding
metadata:
  name: janus-admin
roleRef:
  apiGroup: authorization.openshift.io/v1
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: janus-admin
  namespace: janus
---
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: janus
allowHostDirVolumePlugin: true
allowHostPID: true
allowedCapabilities:
- SYS_ADMIN
- SYS_PTRACE
fsGroup:
  type: RunAsAny
readOnlyRootFilesystem: false
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
seccompProfiles:
- '*'
supplementalGroups:
  type: RunAsAny
users:
- system:serviceaccount:janus:janus-admin
volumes:
- '*'
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: janusguards.januscontroller.clustergarage.io
spec:
  group: januscontroller.clustergarage.io
  version: v1alpha1
  scope: Namespaced
  names:
    kind: JanusGuard
    singular: janusguard
    plural: janusguards
    shortNames:
    - jg
    categories:
    - all
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Observable
    type: integer
    description: Number of pods that can be guarded
    JSONPath: .status.observablePods
  - name: Guarded
    type: integer
    description: Number of pods currently being guarded
    JSONPath: .status.guardedPods
---
apiVersion: v1
kind: ImageStream
metadata:
  labels:
    controller: januscontroller
  name: janus-controller
  namespace: janus
spec:
  tags:
  - name: v0.1.0
    from:
      kind: DockerImage
      name: clustergarage/janus-controller:v0.1.0
  - name: latest
    from:
      kind: DockerImage
      name: clustergarage/janus-controller:latest
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  name: januscontroller
  namespace: janus
  labels:
    controller: januscontroller
spec:
  replicas: 1
  selector:
    controller: januscontroller
  template:
    metadata:
      labels:
        controller: januscontroller
    spec:
      containers:
      - name: januscontroller
        image: clustergarage/janus-controller:v0.1.0
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":5000"]
          initialDelaySeconds: 10
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":5000"]
          initialDelaySeconds: 5
        securityContext:
          runAsUser: 0
      serviceAccountName: janus-admin
  triggers:
  - type: ConfigChange
  - type: ImageChange
    imageChangeParams:
      automatic: true
      containerNames:
      - januscontroller
      from:
        kind: ImageStreamTag
        name: janus-controller:v0.1.0
  strategy:
    type: Rolling
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: janusd
  namespace: janus
  labels:
    daemon: janusd
spec:
  selector:
    matchLabels:
      daemon: janusd
  template:
    metadata:
      labels:
        daemon: janusd
    spec:
      containers:
      - name: janusd
        image: clustergarage/janusd:v0.1.0
        ports:
        - name: grpc
          containerPort: 50051
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":50051"]
          initialDelaySeconds: 10
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":50051"]
          initialDelaySeconds: 5
        volumeMounts:
        - name: sysfscgroup
          mountPath: /sys/fs/cgroup
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_PTRACE
      hostPID: true
      serviceAccountName: janus-admin
      volumes:
      - name: sysfscgroup
        hostPath:
          path: /sys/fs/cgroup
---
apiVersion: v1
kind: Service
metadata:
  name: janusd-svc
  namespace: janus
  labels:
    daemon: janusd
spec:
  selector:
    daemon: janusd
  clusterIP: None
  ports:
  - name: grpc
    protocol: TCP
    port: 50051
    targetPort: grpc
